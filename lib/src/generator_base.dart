// import 'dart:async';

// import 'package:build/build.dart';
// import 'package:generator/src/extensions/string_extensions.dart';
// import 'package:generator/src/models/class.dart';
// import 'package:generator/src/models/property.dart';

// /// Checks if you are awesome. Spoiler: you are.
// class Awesome {
//   bool get isAwesome => true;
// }

// Builder mirrorBuilder(BuilderOptions options) => MirrorBuilder();

// class MirrorBuilder implements Builder {
//   @override
//   FutureOr<void> build(BuildStep buildStep) async {
//     final AssetId inputId = buildStep.inputId;

//     print("Building ${inputId.path}");

//     await buildStep.writeAsString(AssetId(r"$package", "generated/"),
//         "/// ${DateTime.now()}\n/// Generated by Naif\n");
//     // String fileAsString = await buildStep.readAsString(buildStep.inputId);

//     // StringBuffer res = StringBuffer();

//     // final List<Class> classes = createClasses(jsonDecode(fileAsString));

//     // for (Class currentClass in classes) {
//     //   res.write(currentClass.toString());
//     //   res.write("\n");
//     //   res.write("\n");
//     //   res.write("-----------------------------\n");
//     //   res.write("\n");
//     //   res.write("\n");
//     //   final output =
//     //       AssetId("${currentClass.name.toUpperCase()}.dart", "generated/");
//     //   await buildStep.writeAsString(output, res.toString());
//     //   res.clear();
//     // }

//     // "$className\n\n\n\n${DateTime.now()}\nGenerated by Naif\n$fileAsString");
//   }

//   @override
//   Map<String, List<String>> get buildExtensions => {
//         ".json": ["generated"]
//       };
// }

// List<Class> createClasses(Map<String, dynamic> json) {
//   List<Class> classes = [];
//   print('Creating classes');

//   classes.add(createClass(json));
//   print("Got first class");
//   for (Map<String, dynamic> property in json["properties"]) {
//     if (property["type"] == "object") {
//       classes.add(createClass(property));
//     }
//   }

//   return classes;
// }

// Class createClass(Map<String, dynamic> json) => Class(
//       name: json["name"].toString().snakeToPascalCase(),
//       description: json["description"].toString().formatDocumentation(),
//       properties: List<Map<String, dynamic>>.from(json["properties"])
//           .map(
//             (Map<String, dynamic> propertyJson) =>
//                 Property.fromJson(propertyJson),
//           )
//           .toList(),
//     );
